//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using DevExpress.Persistent.Base;
using DevExpress.Persistent.Validation;
using DevExpress.ExpressApp.Model;
using QuickZ.Persistent.Base.Mails;
using DevExpress.ExpressApp;
using System.IO;
using DevExpress.ExpressApp.Utils;
using QuickZ.Persistent.Base.Core;
using DevExpress.Persistent.BaseImpl;
using EDS.RentalManager.Express.Module.BusinessObjects.Common;

namespace QuickZ.Persistent.BaseImpl
{
    public interface ISavedDocument
    {
        IFileData File { get; set; }
        //string FileName { get; }
        //string FileExtension { get; }
        //string FileFormat { get; }
        //string GetFileFormat(string extName);
    }
    [NonPersistent]
    [FileAttachment("File")]
    [ImageName("BORentalSavedDocument")]
    [DevExpress.ExpressApp.DC.XafDefaultProperty(nameof(FileName))]
    public abstract class SavedDocument : RMXQuickAuditBaseObject, ISavedDocument, ILocationPrivacyObject
    {
        RMXLocationCategory ILocationPrivacyObject.Location => (this.HomeLocation);

        public SavedDocument(Session session)
            : base(session)
        {

        }
        
        public abstract IFileData File { get; set; }

        public string FileName
        {
            get
            {
                if (File != null)
                    return File.FileName;
                    return "";
            }
        }

        public string FileExtension
        {
            get
            {
                if (File != null)
                    return Path.GetExtension(FileName);
                return "";
            }
        }

        public string FileFormat
        {
            get
            {
                if (File != null)
                    return GetFileFormat(FileExtension);
                return "";
            }
        }

        public static string GetFileFormat(string extName)
        {
            switch (extName.ToLower())
            {
                case ".doc":
                    return "Microsoft Word 2000-2003";
                case ".docx":
                    return "Microsoft Word 2007-2016";
                case ".xls":
                    return "Microsoft Excel 2000-2003";
                case ".xlsx":
                    return "Microsoft Excel 2007-2016";
                case ".pdf":
                    return "Portable Document Format (PDF)";
            }
            return "";
        }

    }

}
